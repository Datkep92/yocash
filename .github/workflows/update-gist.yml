name: Update Gist with processed links

on:
  push:
    paths:
      - 'linkcu2.txt'
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-gist:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Process links
      run: |
        set -x
        INPUT_TXT="linkcu2.txt"
        OUTPUT_JSON="linkcu.json"
        PLACEHOLDER_IMG="https://cuacuondaiphucvinh.com/wp-content/uploads/2024/12/icon-loi.jpg"
        MAX_LINES=3000

        > $OUTPUT_JSON

        # Kiểm tra file linkcu2.txt
        if [ ! -s "$INPUT_TXT" ]; then
          echo "Error: File $INPUT_TXT is empty or does not exist"
          exit 1
        fi

        decode_html_entities() {
          echo "$1" | sed -e 's/"/"/g' -e "s/'/'/g" -e 's/</</g' -e 's/>/>/g' -e 's/&/\&/g'
        }

        get_post_type_from_url() {
          case "$1" in
            *"/reel/"*) echo "reel";;
            *"/story.php"*|*"/stories/"*) echo "story";;
            *"/video"*|*"/watch"*|*"/videos/"*) echo "video";;
            *"/photo"*|*"/photos/"*) echo "photo";;
            *"/groups/"*) echo "group_post";;
            *"/posts/"*) echo "post";;
            *"/events/"*) echo "event";;
            *"facebook.com/"*) echo "profile";;
            *) echo "unknown";;
          esac
        }

        while read -r url; do
          [ -z "$url" ] && continue
          html=$(curl -sL --max-time 15 -A "Mozilla/5.0" "$url")
          if [ $? -ne 0 ] || [ -z "$html" ]; then
            echo "Error: Cannot fetch URL $url, skipping..."
            title="Bài viết lỗi"
            desc="Không có nội dung"
            img="$PLACEHOLDER_IMG"
            status="error"
          else
            title=$(echo "$html" | grep -oP '(?<=<title>).*?(?=</title>)' | head -n1)
            og_title=$(echo "$html" | grep -oP '<meta property="og:title" content="\K[^"]*' | head -n1)
            og_desc=$(echo "$html" | grep -oP '<meta property="og:description" content="\K[^"]*' | head -n1)
            og_img=$(echo "$html" | grep -oP '<meta property="og:image" content="\K[^"]*' | head -n1)

            final_title=${og_title:-${title:-"Bài viết lỗi"}}
            final_desc=$(decode_html_entities "${og_desc:-"Không có nội dung"}")
            final_image=${og_img:-$PLACEHOLDER_IMG}

            if [ -n "$og_desc" ] || [ "$final_image" != "$PLACEHOLDER_IMG" ]; then
              status="success"
            else
              if echo "$html" | grep -qi "login"; then status="login"
              elif echo "$html" | grep -qi "content not found\|unavailable\|removed"; then status="link_hỏng"
              else status="error"
              fi
            fi
          fi

          post_type=$(get_post_type_from_url "$url")
          safe_title=$(echo "$final_title" | sed 's/"/\\"/g')
          safe_desc=$(echo "$final_desc" | sed 's/"/\\"/g')
          safe_img=$(echo "$final_image" | sed 's/"/\\"/g')

          printf '{"url":"%s","title":"%s","description":"%s","image":"%s","status":"%s","post_type":"%s"}\n' \
            "$url" "$safe_title" "$safe_desc" "$safe_img" "$status" "$post_type" >> $OUTPUT_JSON
        done < $INPUT_TXT

        echo "Nội dung file linkcu.json:"
        cat $OUTPUT_JSON

    - name: Upload JSON to Gist
      env:
        GIST_ID: "d5eaeee8d07e6a88883646cff42d2b88"
        GIST_FILE_NAME: "linkitemmmm"
      run: |
        set -x
        content=$(cat $OUTPUT_JSON | jq -Rs .)
        response=$(curl -s -o response.json -w "%{http_code}" -X PATCH "https://api.github.com/gists/$GIST_ID" -H "Authorization: Bearer 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" -H "Accept: application/vnd.github+json" -d "{\"files\": {\"$GIST_FILE_NAME\": {\"content\": \"$content\"}}}")
        if [ "$response" -ne 200 ]; then
          echo "Error: Failed to update Gist. HTTP status: $response"
          cat response.json
          exit 1
        fi
        echo "Gist updated successfully!"
