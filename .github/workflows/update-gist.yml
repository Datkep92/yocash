name: Update Gist with Processed Links

on:
  workflow_dispatch:
  push:
    paths:
      - 'linkcu2.txt'

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Process links
        run: |
          set -x
          INPUT_TXT="linkcu2.txt"
          OUTPUT_JSON="linkcu.json"
          PLACEHOLDER_IMG="https://cuacuondaiphucvinh.com/wp-content/uploads/2024/12/icon-loi.jpg"
          MAX_LINES=3000
          
          echo "[" > $OUTPUT_JSON
          first=1

          decode_html_entities() {
            echo "$1" | sed -e 's/"/"/g' -e "s/'/'/g" -e 's/</</g' -e 's/>/>/g' -e 's/&/\&/g'
          }

          get_post_type_from_url() {
            case "$1" in
              *"/reel/"*) echo "reel" ;;
              *"/story.php"*|*"/stories/"*) echo "story" ;;
              *"/video"*|*"/watch"*|*"/videos/"*) echo "video" ;;
              *"/photo"*|*"/photos/"*) echo "photo" ;;
              *"/groups/"*) echo "group_post" ;;
              *"/posts/"*) echo "post" ;;
              *"/events/"*) echo "event" ;;
              *"facebook.com/"*) echo "profile" ;;
              *) echo "unknown" ;;
            esac
          }

          while read -r url; do
            [ -z "$url" ] && continue
            html=$(curl -sL --max-time 15 -A "Mozilla/5.0" "$url")
            if [ $? -ne 0 ] || [ -z "$html" ]; then
              echo "Error: Cannot fetch URL $url, skipping..."
              title="Bài viết lỗi"
              desc="Không có nội dung"
              img="$PLACEHOLDER_IMG"
              status="error"
            else
              title=$(echo "$html" | grep -oP '(?<=<title>).*?(?=</title>)' | head -n1)
              og_title=$(echo "$html" | grep -oP '<meta property="og:title" content="\K[^"]*' | head -n1)
              og_desc=$(echo "$html" | grep -oP '<meta property="og:description" content="\K[^"]*' | head -n1)
              og_img=$(echo "$html" | grep -oP '<meta property="og:image" content="\K[^"]*' | head -n1)

              final_title=${og_title:-${title:-"Bài viết lỗi"}}
              final_desc=$(decode_html_entities "${og_desc:-"Không có nội dung"}")
              final_image=${og_img:-$PLACEHOLDER_IMG}

              if [ -n "$og_desc" ] || [ "$final_image" != "$PLACEHOLDER_IMG" ]; then
                status="success"
              else
                if echo "$html" | grep -qi "login"; then status="login"
                elif echo "$html" | grep -qi "content not found\|unavailable\|removed"; then status="link_hỏng"
                else status="error"
                fi
              fi
            fi

            post_type=$(get_post_type_from_url "$url")
            safe_title=$(echo "$final_title" | sed 's/"/\\"/g')
            safe_desc=$(echo "$final_desc" | sed 's/"/\\"/g')
            safe_img=$(echo "$final_image" | sed 's/"/\\"/g')

            [ "$first" -eq 0 ] && echo "," >> $OUTPUT_JSON
            first=0

            {
              printf '{\n'
              printf '  "url": "%s",\n' "$url"
              printf '  "title": "%s",\n' "$safe_title"
              printf '  "description": "%s",\n' "$safe_desc"
              printf '  "image": "%s",\n' "$safe_img"
              printf '  "status": "%s",\n' "$status"
              printf '  "post_type": "%s"\n' "$post_type"
              printf '}'
            } >> $OUTPUT_JSON
          done < $INPUT_TXT

          echo "]" >> $OUTPUT_JSON
