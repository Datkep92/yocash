name: Extract Facebook Metadata

on:
  workflow_dispatch:
    inputs:
      gist_id:
        description: 'ID Gist chứa file urls.txt'
        required: true

jobs:
  extract:
    runs-on: ubuntu-latest

    steps:
      - name: Cài đặt jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Lấy nội dung file raw từ Gist
        run: |
          set -e
          GIST_ID="${{ github.event.inputs.gist_id }}"
          RAW_URL=$(curl -s -H "Authorization: token ${{ secrets.dat_kep }}" \
            https://api.github.com/gists/$GIST_ID \
            | jq -r '.files["urls.txt"].raw_url')

          if [ -z "$RAW_URL" ]; then
            echo "❌ Không tìm thấy file urls.txt"
            exit 1
          fi

          curl -sL "$RAW_URL" -o urls.txt

      - name: Trích xuất HTML & Metadata
        run: |
          set -e
          placeholder_img="https://cuacuondaiphucvinh.com/wp-content/uploads/2024/12/icon-loi.jpg"
          OUTPUT="merged.json"
          echo "[" > $OUTPUT

          decode_html_entities() {
            input="$1"
            decoded=$(echo "$input" | sed -e 's/&quot;/"/g' -e "s/&#39;/'/g" -e 's/&lt;/</g' -e 's/&gt;/>/g' -e 's/&amp;/\&/g')
            echo "$decoded" | awk '{
              while (match($0, /&#[0-9]+;/)) {
                num = substr($0, RSTART+2, RLENGTH-3);
                chr = sprintf("%c", num);
                $0 = substr($0, 1, RSTART-1) chr substr($0, RSTART+RLENGTH);
              }
              print;
            }'
          }

          escape_json() {
            echo "$1" | sed -e 's/\\/\\\\/g' -e 's/"/\\"/g'
          }

          get_post_type() {
            case "$1" in
              *"/reel/"*) echo "reel" ;;
              *"/story.php"*|*"/stories/"*) echo "story" ;;
              *"/video"*|*"/watch"*|*"/videos/"*) echo "video" ;;
              *"/photo"*|*"/photos/"*) echo "photo" ;;
              *"/groups/"*) echo "group_post" ;;
              *"/posts/"*) echo "post" ;;
              *"/events/"*) echo "event" ;;
              *"facebook.com/"*) echo "profile" ;;
              *) echo "unknown" ;;
            esac
          }

          first=true
          while read -r url; do
            [ -z "$url" ] && continue

            info=$(curl -Ls -o /dev/null -w "%{url_effective} %{http_code}" "$url")
            final_url=$(echo "$info" | awk '{print $1}')
            [ -z "$final_url" ] && continue

            if echo "$final_url" | grep -q "login"; then
              decoded=$(echo "$final_url" | sed -E 's/.*next=([^\&]+).*/\1/' | sed 's/%/\\x/g' | xargs -0 echo -e)
              final_url="$decoded"
            fi

            html=$(curl -sL --max-time 15 -A "Mozilla/5.0" "$final_url")

            title="Bài viết lỗi"
            desc="Không có nội dung"
            image="$placeholder_img"
            status="error"

            if [ -n "$html" ]; then
              raw_title=$(echo "$html" | grep -oP '(?<=<title>).*?(?=</title>)' | head -n1)
              og_title=$(echo "$html" | grep -oP '<meta property="og:title" content="\K[^"]*' | head -n1)
              og_desc=$(echo "$html" | grep -oP '<meta property="og:description" content="\K[^"]*' | head -n1)
              og_image=$(echo "$html" | grep -oP '<meta property="og:image" content="\K[^"]*' | head -n1)

              [ -n "$og_title" ] && title="$og_title"
              [ -z "$og_title" ] && [ -n "$raw_title" ] && title="$raw_title"
              [ -n "$og_desc" ] && desc=$(decode_html_entities "$og_desc")
              [ -n "$og_image" ] && image="$og_image"

              if [ -n "$og_desc" ] || [ "$image" != "$placeholder_img" ]; then
                status="success"
              else
                echo "$html" | grep -qi "login" && status="login"
                echo "$html" | grep -qi "content not found\|unavailable\|removed" && status="link_hỏng"
              fi
            fi

            title=$(escape_json "$title")
            desc=$(escape_json "$desc")
            image=$(escape_json "$image")
            post_type=$(get_post_type "$final_url")

            [ "$first" = true ] && first=false || echo "," >> $OUTPUT

            printf '{"url":"%s","title":"%s","description":"%s","image":"%s","status":"%s","post_type":"%s"}' \
              "$final_url" "$title" "$desc" "$image" "$status" "$post_type" >> $OUTPUT

          done < urls.txt

          echo "]" >> $OUTPUT
          echo "✅ Đã tạo merged.json"

      - name: Ghi kết quả vào Gist
        run: |
          CONTENT=$(jq -Rs . < merged.json)
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.dat_kep }}" \
            -H "Accept: application/vnd.github+json" \
            -d "{\"files\":{\"merged.json\":{\"content\":$CONTENT}}}" \
            https://api.github.com/gists/${{ github.event.inputs.gist_id }}
          echo "✅ Đã cập nhật merged.json trong Gist"
