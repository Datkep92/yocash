name: Extract HTML from URLs

on:
  workflow_dispatch:
    inputs:
      gist_id:
        description: 'ID of the Gist ch·ª©a danh s√°ch URL (m·ªói d√≤ng 1 link)'
        required: true

jobs:
  extract:
    runs-on: ubuntu-latest

    steps:
      - name: C√†i jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: T·∫£i Gist v·ªÅ file txt
        run: |
          set -e
          echo "üîç T·∫£i n·ªôi dung Gist..."
          GIST_ID="${{ github.event.inputs.gist_id }}"
          GIST_DATA=$(curl -s -H "Authorization: token ${{ secrets.dat_kep }}" https://api.github.com/gists/$GIST_ID)

          RAW_URL=$(echo "$GIST_DATA" | jq -r '.files | to_entries[0].value.raw_url')

          if [ -z "$RAW_URL" ]; then
            echo "‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c raw_url t·ª´ Gist"
            exit 3
          fi

          curl -s "$RAW_URL" -o urls.txt
          echo "‚úÖ ƒê√£ t·∫£i danh s√°ch URL v√†o urls.txt"

      - name: Tr√≠ch xu·∫•t HTML v√† metadata
        run: |
          set -e
          INPUT_TXT="urls.txt"
          OUTPUT_JSON="processed_urls.jsonl"
          PLACEHOLDER_IMG="https://cuacuondaiphucvinh.com/wp-content/uploads/2024/12/icon-loi.jpg"
          > "$OUTPUT_JSON"

          if [ ! -s "$INPUT_TXT" ]; then
            echo "‚ùå File r·ªóng ho·∫∑c kh√¥ng t·ªìn t·∫°i"
            exit 3
          fi

          get_post_type_from_url() {
            case "$1" in
              *"/reel/"*) echo "reel" ;;
              *"/story.php"*|*"/stories/"*) echo "story" ;;
              *"/video"*|*"/watch"*|*"/videos/"*) echo "video" ;;
              *"/photo"*|*"/photos/"*) echo "photo" ;;
              *"/groups/"*) echo "group_post" ;;
              *"/posts/"*) echo "post" ;;
              *"/events/"*) echo "event" ;;
              *"facebook.com/"*) echo "profile" ;;
              *) echo "unknown" ;;
            esac
          }

          while read -r url; do
            [ -z "$url" ] && continue
            html=$(curl -sL --max-time 15 -A "Mozilla/5.0" "$url")

            if [ -z "$html" ]; then
              title="B√†i vi·∫øt l·ªói"
              desc="Kh√¥ng c√≥ n·ªôi dung"
              img="$PLACEHOLDER_IMG"
              status="error"
            else
              title=$(echo "$html" | grep -oP '(?<=<title>).*?(?=</title>)' | head -n1)
              og_title=$(echo "$html" | grep -oP '<meta property="og:title" content="\K[^"]*' | head -n1)
              og_desc=$(echo "$html" | grep -oP '<meta property="og:description" content="\K[^"]*' | head -n1)
              og_img=$(echo "$html" | grep -oP '<meta property="og:image" content="\K[^"]*' | head -n1)

              final_title=${og_title:-${title:-"B√†i vi·∫øt l·ªói"}}
              final_desc=${og_desc:-"Kh√¥ng c√≥ n·ªôi dung"}
              final_image=${og_img:-$PLACEHOLDER_IMG}

              if [ -n "$og_desc" ] || [ "$final_image" != "$PLACEHOLDER_IMG" ]; then
                status="success"
              else
                if echo "$html" | grep -qi "login"; then status="login"
                elif echo "$html" | grep -qi "content not found\|unavailable\|removed"; then status="link_h·ªèng"
                else status="error"
                fi
              fi
            fi

            post_type=$(get_post_type_from_url "$url")
            safe_title=$(echo "$final_title" | sed 's/"/\\"/g')
            safe_desc=$(echo "$final_desc" | sed 's/"/\\"/g')
            safe_img=$(echo "$final_image" | sed 's/"/\\"/g')

            printf '{"url":"%s","title":"%s","description":"%s","image":"%s","status":"%s","post_type":"%s"}\n' \
              "$url" "$safe_title" "$safe_desc" "$safe_img" "$status" "$post_type" >> "$OUTPUT_JSON"

          done < "$INPUT_TXT"

          echo "‚úÖ ƒê√£ t·∫°o file $OUTPUT_JSON"

      - name: C·∫≠p nh·∫≠t l·∫°i Gist
        run: |
          set -e
          GIST_ID="${{ github.event.inputs.gist_id }}"
          CONTENT=$(jq -Rs . < processed_urls.jsonl)

          curl -X PATCH \
            -H "Authorization: token ${{ secrets.dat_kep }}" \
            -H "Accept: application/vnd.github+json" \
            -d "{\"files\":{\"processed_urls.jsonl\":{\"content\":$CONTENT}}}" \
            https://api.github.com/gists/$GIST_ID

          echo "‚úÖ Gist ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng!"
